// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>
#include "vector.hpp"
#include "debug.hpp"

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// altgpuvector_int
SEXP altgpuvector_int(R_xlen_t n);
RcppExport SEXP _altgpu_altgpuvector_int(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< R_xlen_t >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(altgpuvector_int(n));
    return rcpp_result_gen;
END_RCPP
}
// altgpuvector_real
SEXP altgpuvector_real(R_xlen_t n);
RcppExport SEXP _altgpu_altgpuvector_real(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< R_xlen_t >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(altgpuvector_real(n));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_altgpu_altgpuvector_int", (DL_FUNC) &_altgpu_altgpuvector_int, 1},
    {"_altgpu_altgpuvector_real", (DL_FUNC) &_altgpu_altgpuvector_real, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_altgpu(DllInfo *dll) {
    AltGPUVector<int   >::Init(dll, "integer");
    AltGPUVector<double>::Init(dll, "double");
    set_debug_option();
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
